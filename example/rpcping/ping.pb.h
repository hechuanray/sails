// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ping.proto

#ifndef PROTOBUF_ping_2eproto__INCLUDED
#define PROTOBUF_ping_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace sails {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ping_2eproto();
void protobuf_AssignDesc_ping_2eproto();
void protobuf_ShutdownFile_ping_2eproto();

class PingMessage;

// ===================================================================

class PingMessage : public ::google::protobuf::Message {
 public:
  PingMessage();
  virtual ~PingMessage();

  PingMessage(const PingMessage& from);

  inline PingMessage& operator=(const PingMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PingMessage& default_instance();

  void Swap(PingMessage* other);

  // implements Message ----------------------------------------------

  PingMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingMessage& from);
  void MergeFrom(const PingMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:sails.PingMessage)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ping_2eproto();
  friend void protobuf_AssignDesc_ping_2eproto();
  friend void protobuf_ShutdownFile_ping_2eproto();

  void InitAsDefaultInstance();
  static PingMessage* default_instance_;
};
// ===================================================================

class PingService_Stub;

class PingService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline PingService() {};
 public:
  virtual ~PingService();

  typedef PingService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void ping(::google::protobuf::RpcController* controller,
                       const ::sails::PingMessage* request,
                       ::sails::PingMessage* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(PingService);
};

class PingService_Stub : public PingService {
 public:
  PingService_Stub(::google::protobuf::RpcChannel* channel);
  PingService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~PingService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements PingService ------------------------------------------

  void ping(::google::protobuf::RpcController* controller,
                       const ::sails::PingMessage* request,
                       ::sails::PingMessage* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(PingService_Stub);
};


// ===================================================================


// ===================================================================

// PingMessage

// required int64 time = 1;
inline bool PingMessage::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PingMessage::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PingMessage::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PingMessage::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 PingMessage::time() const {
  return time_;
}
inline void PingMessage::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sails

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ping_2eproto__INCLUDED
